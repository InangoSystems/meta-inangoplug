diff --git a/include/linux/if_bridge.h b/include/linux/if_bridge.h
index c6587c0..cc0d435 100644
--- a/include/linux/if_bridge.h
+++ b/include/linux/if_bridge.h
@@ -54,6 +54,10 @@ extern void brioctl_set(int (*ioctl_hook)(struct net *, unsigned int, void __use
 typedef int br_should_route_hook_t(struct sk_buff *skb);
 extern br_should_route_hook_t __rcu *br_should_route_hook;
 
+#ifdef CONFIG_LTQ_MCAST_SNOOPING
+extern void (*ovs_brc_mcsnoop_hook)(int type, int br_snooping);
+#endif
+
 #if IS_ENABLED(CONFIG_BRIDGE) && IS_ENABLED(CONFIG_BRIDGE_IGMP_SNOOPING)
 int br_multicast_list_adjacent(struct net_device *dev,
 			       struct list_head *br_ip_list);
diff --git a/net/bridge/ltq_br_mcast_snooping.c b/net/bridge/ltq_br_mcast_snooping.c
index e2663f5..e6d5140 100644
--- a/net/bridge/ltq_br_mcast_snooping.c
+++ b/net/bridge/ltq_br_mcast_snooping.c
@@ -34,6 +34,8 @@ int bridge_igmp_snooping = 0;
 int bridge_mld_snooping = 0;
 int bridge_igmp_snooping_dbg = 0;
 
+void (*ovs_brc_mcsnoop_hook)(int type, int br_snooping);
+EXPORT_SYMBOL(ovs_brc_mcsnoop_hook);
 
 #ifdef CONFIG_SYSCTL
 static struct ctl_table_header *br_mcast_sysctl_header;
@@ -43,11 +45,20 @@ int br_mcast_sysctl_call_tables(struct ctl_table *ctl, int write,
 				void __user *buffer, size_t *lenp, loff_t *ppos)
 {
 	int ret;
+	int type = strcmp(ctl->procname, "bridge-igmp-snooping") ? 1 : 0;
 
 	ret = proc_dointvec(ctl, write, buffer, lenp, ppos);
 
 	if (write && *(int *)(ctl->data))
 		*(int *)(ctl->data) = 1;
+
+	if (ovs_brc_mcsnoop_hook) {
+		if (!rtnl_trylock())
+			return restart_syscall();
+		ovs_brc_mcsnoop_hook(type, type ? bridge_mld_snooping : bridge_igmp_snooping);
+		rtnl_unlock();
+	}
+
 	return ret;
 }
 
