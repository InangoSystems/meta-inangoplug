diff --git a/hil_intrusive_p7.c b/hil_intrusive_p7.c
index ce3af0e..0e17f83 100644
--- a/hil_intrusive_p7.c
+++ b/hil_intrusive_p7.c
@@ -854,6 +854,9 @@ static struct sock*    netlink_socket = NULL;
 static bool ignore_bridge_mtu_update = false;
 #endif
 
+static AVALANCHE_PP_RET_e (*am_create_cb) (Uint32 handle, struct sk_buff *skb);
+static AVALANCHE_PP_RET_e (*am_delete_cb) (Uint32 handle);
+
 //-----------------------------------------------------------------------------------------------------------------------------------------------
 //
 // ##        #######   ######     ###    ##          ######## ##     ## ##    ##  ######  ######## ####  #######  ##    ##  ######
@@ -2611,6 +2614,13 @@ static AVALANCHE_PP_RET_e ddh_notify_user_application(struct AVALANCHE_PP_DDH_NO
     return PP_RC_SUCCESS;
 }
 
+AVALANCHE_PP_RET_e acceleration_module_statistic_set_cb( AVALANCHE_PP_RET_e (*create_cb)(Uint32, struct sk_buff*), AVALANCHE_PP_RET_e (*remove_cb)(Uint32)){
+    am_create_cb = create_cb;
+    am_delete_cb = remove_cb;
+    return PP_RC_SUCCESS;
+}
+EXPORT_SYMBOL(acceleration_module_statistic_set_cb);
+
 /**************************************************************************
  * FUNCTION NAME : hil_pp_event_handler
  **************************************************************************
@@ -2702,6 +2712,9 @@ static AVALANCHE_PP_RET_e hil_pp_event_handler(AVALANCHE_PP_EVENT_e event_id, Ui
             }
 #endif
 #endif
+            if (am_create_cb)
+                am_create_cb(param1, (struct sk_buff*)param2);
+
             pp_event_counters.ev_session_created++;
             break;
         }
@@ -2709,6 +2722,10 @@ static AVALANCHE_PP_RET_e hil_pp_event_handler(AVALANCHE_PP_EVENT_e event_id, Ui
         case PP_EV_SESSION_EXPIRED:
         {
             pp_event_counters.ev_session_expired++;
+
+            if (am_delete_cb)
+                am_delete_cb(param1);
+
             if (PP_RC_SUCCESS != avalanche_pp_session_delete(param1, NULL, True, True))
             {
                 errPrint("Unable to delete session %d\n", param1);
@@ -2727,6 +2744,9 @@ static AVALANCHE_PP_RET_e hil_pp_event_handler(AVALANCHE_PP_EVENT_e event_id, Ui
                 (struct AVALANCHE_PP_SESSION_DELETE_CB_PARAM1_t*)param1;
             Uint32 session_handle = session_delete->session_handle;
 
+            if (am_delete_cb)
+                am_delete_cb(param1);
+
             pp_event_counters.ev_session_delete++;
             avalanche_pp_session_get_info(param1, &session);
             if (session)
@@ -10672,4 +10692,4 @@ static AVALANCHE_PP_RET_e  hil_tdox_calc_max_suppressed_sessions(Uint32 time_gap
     max_suppressd_sessions /= 1000000;
 
     return avalanche_pp_set_tdox_max_suppressed_sessions((Uint16) max_suppressd_sessions);
-}
\ No newline at end of file
+}
