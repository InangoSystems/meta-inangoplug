From 8413582585245e74dfe0dd166b80b73cecabd0b2 Mon Sep 17 00:00:00 2001
From: Kyrylo Mushta <k.mushta@inango-systems.com>
Date: Wed, 25 Aug 2021 18:15:25 +0300
Subject: [PATCH] Commit Title          : Cannot add interface to bridge by
 dmcli

BugID                 : 25343
Bug Fixed(y/N[blankN]):
CodeReviewId          : 0
Description           : Fixed: cannot add interface to bridge by dmcli
---
 datapath/brcompat_main.c      | 24 ++++++++++++++++++------
 datapath/datapath.c           |  3 +++
 datapath/datapath.h           |  1 +
 datapath/vport-internal_dev.c | 18 ++++++++++++++++++
 4 files changed, 40 insertions(+), 6 deletions(-)

diff --git a/datapath/brcompat_main.c b/datapath/brcompat_main.c
index cc208c7cf..d110c7580 100644
--- a/datapath/brcompat_main.c
+++ b/datapath/brcompat_main.c
@@ -443,19 +443,14 @@ void brc_add_del_entry_to_brlist(struct net_device *br_dev, struct net_device *p
 	mutex_unlock(&brc_serial);
 }
 
-static int brc_add_del_port(struct net_device *dev, int port_ifindex, int add)
+static int brc_add_del_port_dev(struct net_device *dev, struct net_device *port, int add)
 {
 	struct sk_buff *request;
-	struct net_device *port;
 	int err;
 
 	if (!capable(CAP_NET_ADMIN))
 		return -EPERM;
 
-	port = __dev_get_by_index(dev_net(dev), port_ifindex);
-	if (!port)
-		return -EINVAL;
-
 	/* Save name of dev and port because there's a race between the
 	 * rtnl_unlock() and the brc_send_simple_command(). */
 	request = brc_make_request(add ? BRC_GENL_C_PORT_ADD : BRC_GENL_C_PORT_DEL,
@@ -485,6 +480,17 @@ static int brc_add_del_port(struct net_device *dev, int port_ifindex, int add)
 	return err;
 }
 
+static int brc_add_del_port(struct net_device *dev, int port_ifindex, int add)
+{
+	struct net_device *port;
+
+	port = __dev_get_by_index(dev_net(dev), port_ifindex);
+	if (!port)
+		return -EINVAL;
+
+	return brc_add_del_port_dev(dev, port, add);
+}
+
 /* seamless-ovs { */
 static int brc_add_del_mg_rec(struct net_device *dev, br_grp_mem_t *rec, int add)
 {
@@ -1190,6 +1196,9 @@ static int __init brc_init(void)
 	/* Set the openvswitch device mac address assignment handler */
 	ovs_dp_mac_addr_hook = brc_dev_mac_addr;
 
+	/* Set the openvswitch device add/del port handler */
+	ovs_dp_add_del_port_hook = brc_add_del_port_dev;
+
 	/* Set the openvswitch device sysfs handler */
 	ovs_dp_sysfs_hook = brc_dev_sysfs;
 	ovs_dp_sysfs_string_hook = brc_dev_sysfs_string;
@@ -1229,6 +1238,9 @@ static void brc_cleanup(void)
 	/* Unregister mac address hooks */
 	ovs_dp_mac_addr_hook = NULL;
 
+	/* Unregister add/del port hooks */
+	ovs_dp_add_del_port_hook = NULL;
+
 	/* Unregister brc_get_fdb_entries */
 	ovs_get_fdb_entries = NULL;
 	/* Unregister the openvswitch device handler to add/del ports in list */
diff --git a/datapath/datapath.c b/datapath/datapath.c
index 62cb3369e..199e18e87 100644
--- a/datapath/datapath.c
+++ b/datapath/datapath.c
@@ -78,6 +78,9 @@ EXPORT_SYMBOL(ovs_dp_ioctl_hook);
 int (*ovs_dp_mac_addr_hook)(struct net_device *dev, void *p);
 EXPORT_SYMBOL(ovs_dp_mac_addr_hook);
 
+int (*ovs_dp_add_del_port_hook)(struct net_device *br_dev, struct net_device *p_dev, int add);
+EXPORT_SYMBOL(ovs_dp_add_del_port_hook);
+
 int (*ovs_dp_sysfs_hook)(struct net_device *dev, unsigned long *ul_value, int cmd, int oper);
 EXPORT_SYMBOL(ovs_dp_sysfs_hook);
 
diff --git a/datapath/datapath.h b/datapath/datapath.h
index 0cfde2142..7e8be4ccd 100644
--- a/datapath/datapath.h
+++ b/datapath/datapath.h
@@ -265,6 +265,7 @@ extern struct genl_family dp_vport_genl_family;
 extern const struct genl_multicast_group ovs_dp_vport_multicast_group;
 extern int (*ovs_dp_ioctl_hook)(struct net_device *dev, struct ifreq *rq, int cmd);
 extern int (*ovs_dp_mac_addr_hook)(struct net_device *dev, void *p);
+extern int (*ovs_dp_add_del_port_hook)(struct net_device *br_dev, struct net_device *p_dev, int add);
 extern int (*ovs_dp_sysfs_hook)(struct net_device *dev, unsigned long *ul_value, int cmd, int oper);
 extern int (*ovs_dp_sysfs_string_hook)(struct net_device *dev, char *ustring, int cmd);
 extern int (*ovs_get_fdb_entries)(struct net_device *dev, void *userbuf, unsigned long maxnum, unsigned long offset, bool is_user_buf);
diff --git a/datapath/vport-internal_dev.c b/datapath/vport-internal_dev.c
index 7de0ef260..bf5fa26d6 100644
--- a/datapath/vport-internal_dev.c
+++ b/datapath/vport-internal_dev.c
@@ -195,6 +195,22 @@ internal_get_stats(struct net_device *dev, struct rtnl_link_stats64 *stats)
 	}
 }
 
+static int internal_add_slave(struct net_device *br_dev, struct net_device *p_dev)
+{
+	if (ovs_dp_add_del_port_hook) {
+		return ovs_dp_add_del_port_hook(br_dev, p_dev, 1);
+	}
+	return -EOPNOTSUPP;
+}
+
+static int internal_del_slave(struct net_device *br_dev, struct net_device *p_dev)
+{
+	if (ovs_dp_add_del_port_hook) {
+		return ovs_dp_add_del_port_hook(br_dev, p_dev, 0);
+	}
+	return -EOPNOTSUPP;
+}
+
 static const struct net_device_ops internal_dev_netdev_ops = {
 	.ndo_open = internal_dev_open,
 	.ndo_stop = internal_dev_stop,
@@ -205,6 +221,8 @@ static const struct net_device_ops internal_dev_netdev_ops = {
 	.ndo_change_mtu = internal_dev_change_mtu,
 #endif
 	.ndo_get_stats64 = (void *)internal_get_stats,
+	.ndo_add_slave = internal_add_slave,
+	.ndo_del_slave = internal_del_slave,
 };
 
 static struct rtnl_link_ops internal_dev_link_ops __read_mostly = {
